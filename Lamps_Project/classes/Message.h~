#ifndef MENSAGEM

#include "ofstream.h"
#include "ifstream.h"

#define MESSAGESIZE 88


namespace pj{

class Message {




private:
int destinatario;
int remetente;
int tipo;


char dados[MESSAGESIZE];

public:
Message(){
}

 /**
     * Creates a new message to be sent by the radio.
     * 
     * @param lampType          see Message::message public constant class atribute.
     * @param specialFlags      see Message::config public constant class atribute.
     */
Message(int destino, int origem, int tipo, void* dados, int size)
  :  destinatario(destino), remetente(origem), tipo(tipo), size(size)
{
    
    for (int i=0;i<size && i < MESSAGESIZE ;i++){
        this->dados[i]= dados[i];
    }
}
~Message(){
   
}
Message( const Message& m):
    Message(m.destinatario, m.remetente, m.tipo, m.dados, m.size ) {

}


char* getRest(){
    return dados;
}
int getDataSize(){
    return MESSAGESIZE;
}

int getDest(){
	return destinatario;
}

int getOrig(){
	return remetente;
}

int getTipo(){
	return tipo;
}
friend ofstream& operator<<(ofstream& of,const Message& m){
   char buffer[sizeof(m)];
   buffer = m;
   of<<buffer;
   
    return of;
}

friend ifstream& operator>>(ifstream& is, Message& m){
	char buffer[sizeof(Message)];
	is>>buffer;
	m = (Message)buffer;

}


};

}

#endif
